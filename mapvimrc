map  <LEADER>v <C-v>
map g<Space> g<C-]>
map g<Tab> g<S-Space><C-w>T
map g<S-Space> :split<CR>g<C-]>
map g<S-CR> :vsplit<CR>g<C-]>

map ga :Alternate<CR>

map <LEADER>3 \c<SPACE>

"hightlight extra space
highlight ExtraWhitespace ctermbg=DarkGrey guibg=DarkGrey
match ExtraWhitespace /[ \t]\+$/

"better background
highlight Pmenu guibg=grey14 guifg=moccasin ctermbg=DarkGrey ctermfg=Black

map <LEADER>o :e<SPACE>
map <LEADER>n :n<SPACE>

"splitjoin
nmap <Leader>- :SplitjoinJoin<cr>
nmap <Leader>= :SplitjoinSplit<cr>
let g:splitjoin_ruby_curly_braces = 0

"Tab in visual mode
vmap <Tab> >gv
vmap <S-Tab> <gv

"why bother differenciate between j, k and gj, gk
map j gj
map k gk

"enter new line without insert mode
nmap <Space><CR> i<CR><ESC>

"edit mode keymap
imap <C-SPACE> <C-x><C-o>
imap <S-Tab> <C-o>
imap <ESC> <ESC>:w<CR>
vmap <ESC> <ESC>:w<CR>
smap <ESC> <ESC>:w<CR>

"close surrounding windows
map <LEADER>H <C-w>h:q<CR>
map <LEADER>J <C-w>j:q<CR>
map <LEADER>K <C-w>k:q<CR>
map <LEADER>L <C-w>l:q<CR>


nmap <Tab> :call NextBuffer()<CR>
nmap <S-Tab> :call PreviousBuffer()<CR>



"string to symbol"
map <LEADER>2s ds'i:<ESC>

"folding the block
nnoremap <silent> za :call ToggleFolding()<CR>

function! ToggleFolding()
  if foldclosed('.') == -1 && &foldmethod == 'manual'
    call feedkeys('zf%')
  else
    normal! za
  endif
endfunction

function! ToggleTagList()
  let current_win = winnr()
  execute ":TlistToggle"
  execute current_win . " wincmd w"
endfunction


map <LEADER>6 :call ToggleDisableEnableMiniBufExplorer()<CR>
omap <silent> ic <Plug>CamelCaseMotion_iw
xmap <silent> ic <Plug>CamelCaseMotion_iw

map gw :Utl<CR>
autocmd FileType ruby setlocal iskeyword+=?
autocmd FileType ruby setlocal iskeyword+=!

let g:LargeFile = 3

" fancy pants moving block
vnoremap , :m'>+<CR>gv=gv
vnoremap . :m-2<CR>gv=gv

map @@ @q

map <LEADER>e :call OpenFilesFromClipboard('e')<CR>

vmap <LEADER>nrw :Narrow<CR>
vmap <LEADER>wid :Widen<CR>

smap ' s'
smap " s"

map <LEADER><LEADER> :CommandTFlush<CR>:CommandT<CR>
map <LEADER>W :TMiniBufExplorerCloseAllOthers<CR>
map <C-1> :call ToggleBetweenNERDTreeAndBufExplorer()<CR>
map <C-!> :call CloseNERDTreeAndBufExplorer()<CR>


" Macvim mapping
if has("gui_macvim")
  map  <D-s> <ESC>:wa<CR>
  vmap <D-s> <ESC>:w<CR>
  cmap <D-s> <ESC>:w<CR>
  omap <D-s> <ESC>:w<CR>
  imap <silent> <D-s> <ESC>:w<CR>
  
  map <D-w> :call CommandW()<CR>
  
  " move around window
  imap <D-L> <ESC>A
  imap <D-H> <ESC>I
  imap <D-h> <Left>
  imap <D-j> <Down>
  imap <D-k> <Up>
  imap <D-l> <Right>
  imap <D-w> <Right><ESC>wi
  imap <D-e> <Right><ESC>ea
  imap <D-b> <ESC>bi
  imap <D-d> <ESC>xi
  imap <D-D> <ESC>lxi
  
  "delete next and previous word in insert mode
  imap <D-[> <ESC>lvBxi
  imap <D-]> <ESC>lvExi
  
  "navigating between split windows
  map <D-]> <C-w>w
  map <D-[> <C-w>p
  map <D-H> <C-w>h
  map <D-J> <C-w>j
  map <D-K> <C-w>k
  map <D-L> <C-w>l
  map <D-<> 5<C-w><
  map <D->> 5<C-w>>
  map <D-_> 5<C-w>-
  map <D-+> 5<C-w>+
  
  "redo with D-2 (@ for easily remember)
  map <D-2> <C-r>
  
  "map scrolling
  map <D-j> <C-d>
  map <D-k> <C-u>
  map <D-u> <C-e>
  map <D-i> <C-y>
  map <D-h> g^
  map <D-l> g$
  map <D-P> $a<Space><ESC>p
  map <D-3> :call ToggleTagList()<CR>
  nmap <MiddleMouse> :call OpenFilesFromClipboard('e')<CR>
  nmap <ESC> :w<CR>
  map <D-@> :call ToggleTransparency()<CR>
  imap <D-@> <ESC>:call ToggleTransparency()<CR>a
  map <D-1> :call ToggleBetweenNERDTreeAndBufExplorer()<CR>
  nmap <RIGHTMOUSE> :call ToggleBetweenNERDTreeAndBufExplorer()<CR>
  map <D-!> :call CloseNERDTreeAndBufExplorer()<CR>
endif

